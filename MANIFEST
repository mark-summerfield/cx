# Ideas for additions at the end

# TODO complete docs: migrate definition docs from .h to .c files

cx.h
ini.h
ini.c
vecs.h
vec.h
vec.c
vec_str.h
vec_str.c
vec_int.h
vec_int.c
set_str.h
set_str.c
set_int.h
set_int.c
map_str_real.h
map_str_real.c
deq_str.h
deq_str.c
deq_int.h
deq_int.c

str.h # TODO replace SplitParts with VecStr
str.c

fx.h
fx.c

mx.h
mx.c

tx.h

exit.h

vaargs.h

cx_test.c
cx_util_test.h
cx_util_test.c
mx_test.h
mx_test.c
fx_test.h
fx_test.c
ini_test.h
ini_test.c
deq_str_test.h
deq_str_test.c
deq_int_test.h
deq_int_test.c
map_str_real_test.h
map_str_real_test.c
set_str_test.h
set_str_test.c
set_int_test.h
set_int_test.c
vecs_test.h
vecs_test.c
vec_int_test.h
vec_int_test.c
vec_str_test.h
vec_str_test.c
tag_test.h
vec_test.h
vec_test.c
str_test.h
str_test.c
va_test.h
va_test.c

SConstruct
st.sh

doc.sh
doc.css

# Do these as needed:
#   - set_int_symmetric_difference set_int_isdisjoint set_int_issubset
#     set_int_issuperset
#   - set_str_symmetric_difference set_str_isdisjoint set_str_issubset
#     set_str_issuperset
#   - Deq (void* values, owned iff _destroy)
#   - Map (based on SetStr; owned char* keys; void* values, owned iff
#	   _destroy != NULL) â€” or just use a Set with a cmp function that
#	   compares a 'key' field
#   - MapStrStr (rbt; see set_str)
#   - MapIntAny (rbt; see set_str)

# vim: syn=yaml
