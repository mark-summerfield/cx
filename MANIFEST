# Notes at the end
#
# TODO (1)
# look for
#   Vec...
#   ...
#   vec...free
# & see if
#   int|char* array[size]
# could replace

# TODO (2)
# ini.[hc] to read/write INI files
#   enum IniGetReply{IniKeyFound, IniKeyNotFound, IniInvalidValue};
#   
#   IniGetReply ini_get_bool(const Ini* ini, const char* section, const 
#   char* key, bool* value)
#   IniGetReply ini_get_int(const Ini* ini, const char* section, const char* 
#   key, int* value)
#   IniGetReply ini_get_real(const Ini* ini, const char* section, const 
#   char* key, double* value)
#   const char* ini_get_str(const char* section, const char* key)
#   
#   void ini_set_bool(Ini* ini, const char* section, const char* key, bool 
#   value)
#   void ini_set_int(Ini* ini, const char* section, const char* key, int 
#   value)
#   void ini_set_real(Ini* ini, const char* section, const char* key, double 
#   value)
#   boid ini_set_str(Ini* ini, const char* section, const char* key, const 
#   char* value)
#   void ini_set_comment(Ini* ini, const char* section, const char* key, 
#   const char* comment)
#   
#   // if filename is not empty attempts to load
#   Ini ini_alloc(const char* filename)
#   bool ini_load(Ini *ini, const char* filename)
#   // if filename is empty uses one given in make or load; otherwise uses & 
#   sets new one
#   bool ini_save(Ini *ini, const char* filename)
#   void ini_free(Ini *ini)


cx.h
vecs.h
vec.h
vec.c
vec_str.h
vec_str.c
vec_int.h
vec_int.c
set_str.h
set_str.c
set_int.h
set_int.c
deq_str.h
deq_str.c
deq_int.h
deq_int.c

str.h
str.c

fx.h
fx.c

tx.h

vaargs.h

cx_test.c
cx_util_test.h
cx_util_test.c
deq_str_test.h
deq_str_test.c
deq_int_test.h
deq_int_test.c
set_str_test.h
set_str_test.c
set_int_test.h
set_int_test.c
vec_common_test.h
vec_common_test.c
vec_int_test.h
vec_int_test.c
vec_str_test.h
vec_str_test.c
tag_test.h
vec_test.h
vec_test.c
str_test.h
str_test.c
va_test.h
va_test.c

SConstruct
st.sh

doc.adoc
doc.rb
doc.css
doc.sh

# Do these as needed:
#   - set_int_symmetric_difference set_int_isdisjoint set_int_issubset
#     set_int_issuperset
#   - set_str_symmetric_difference set_str_isdisjoint set_str_issubset
#     set_str_issuperset
#   - Deq (void* values, owned iff _destroy)
#   - Map (based on SetStr; owned char* keys; void* values, owned iff
#	   _destroy != NULL)
#   - MapStrStr (rbt; see set_str)
#   - MapIntAny (rbt; see set_str)
#   - mx.h (_Generic isclose(double|float|long double)

# vim: syn=yaml
