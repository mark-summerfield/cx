# TODO
# (1) complete tests of all vec_int functions
# (2) vec vec_str_alloc_split(const char* s, const char* sep)
# (3) void vec_str_sort(vec* v) // no const!
# (4) vec_bsearch_result vec_str_bsearch(const vec* v, const char* s)
#
# (6) complete tests of all vec_str functions (start by copy/edit vec_int
#     tests)
#
# (7) map with void* keys & values (based on rbt) + tests
# (8) map_str with char* keys & char* values (based on map) + tests
# (9) set with void* keys (based on rbt) + tests
# (10) set_str with char* keys (based on set) + tests
# (11) set_int with int keys (based on or copy/edit of set) + tests
#
# (12) que (based on vec)? + tests
# (13) lst (doubly-linked list)? + tests
# (14) deq (based on list)? + tests
#
# (15) str (based on vec)? + tests

cx_test.c
cx_util_test.h
cx_util_test.c
vec_int_test.h
vec_int_test.c
# TODO vec_str_test.h
# TODO vec_str_test.c
va_test.h
va_test.c

cx.h
vec_common.h
vec.h
vec.c
vec_str.h
vec_str.c
vec_int.h
vec_int.c

vaargs.h

SConstruct

st.sh

# vim: syn=yaml
